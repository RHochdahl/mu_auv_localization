<launch>
  <!-- vehicle, camera name -->
  <arg name="vehicle_type" default="hippocampus" />
  <arg name="vehicle_name" default="uuv00" />
  <arg name="camera_name" default="vertical_camera" />
  <arg name="do_rectify" value="false" />

  <!-- use gazebo gui or rviz -->
  <arg name="gui" default="true" />
  <arg name="rviz" default="false" />

  <!-- spawn position of robot -->
  <arg name="x" default="0.3" />
  <arg name="y" default="0.3" />
  <arg name="z" default="0.0" />
  <arg name="Y" default="1.57" />
  <arg name="P" default="0.0" />
  <arg name="R" default="0.0" />

  <!-- known tags for AprilTag algorithm  -->
  <arg name="less_tags" default="false" />

  <!-- EKF specific -->
  <arg name="process_model" default="simple" />
  <arg name="measurement_model" default="dist" />


  <include file="$(find hippocampus_sim)/launch/single_vehicle_complete.launch">
    <arg name="vehicle_name" value="$(arg vehicle_name)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="rviz" value="$(arg rviz)" />
    <arg name="x" value="$(arg x)" />
    <arg name="y" value="$(arg y)" />
    <arg name="z" value="$(arg z)" />
    <arg name="R" value="$(arg R)" />
    <arg name="P" value="$(arg P)" />
    <arg name="Y" value="$(arg Y)" />
  </include>

  <!-- launch robot specific nodes in namespace -->
  <group ns="$(arg vehicle_name)">
    <param name="vehicle_name" value="$(arg vehicle_name)" />
    <param name="vehicle_type" value="$(arg vehicle_type)" />

    <!-- start tf publisher -->
    <include file="$(find hippocampus_common)/launch/tf_publisher.launch" pass_all_args="true">
    </include>

    <!-- start localization -->
    <include file="$(find mu_auv_localization)/launch/localization.launch" pass_all_args="true">
    </include>

    <!-- Convert orientation from quaternion to roll, pitch, yaw -->
    <node pkg="hippocampus_common" type="pose_to_rpy_node" name="pose_to_rpy_node" output="screen">
        <param name="pose_msg_type" value="PoseWithCovarianceStamped"/>
        <remap from="pose" to="mavros/vision_pose/pose_cov"/>
    </node>

  </group>

</launch>