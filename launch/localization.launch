<launch>
<!-- camera and image processing for real world need to be launched seperately -->
<!-- in simulation, these get launched automatically when spawning vehicle model -->

  <!-- arguments -->
  <arg name="vehicle_name" default="bluerov" doc="Something like 'uuv04' or 'bluerov.'" />
  <arg name="vehicle_type" default="bluerov" doc="Either 'hippocampus' or 'bluerov'."/>

  <!-- camera/image processing specific-->
  <arg name="camera_name" default="vertical_camera" doc="Typically 'vertical_camera'. Used as namespace for the AprilTag pipeline." />
  <arg name="ns" default="$(arg camera_name)"/>
  <arg name="do_rectify" default="false" />
  <arg name="image_raw_topic" default="image_raw" />
  <arg name="image_rect_topic" default="image_rect" />

  <!-- known tags for AprilTag algorithm  -->
  <arg name="less_tags" default="false" />
  <arg if="$(arg less_tags)" name="tag_file" value="$(find mu_auv_localization)/config/less_tags_standalone.yaml" />
  <arg unless="$(arg less_tags)" name="tag_file" value="$(find mu_auv_localization)/config/tags_standalone.yaml" />

  <!-- EKF specific -->
  <arg name="process_model" default="simple" />
  <arg name="measurement_model" default="dist" />

  <node if="$(arg do_rectify)" name="image_rectifier" pkg="image_proc" type="image_proc">
    <remap from="image_raw" to="$(arg camera_name)/$(arg image_raw_topic)" />
    <remap from="image_rect" to="$(arg camera_name)/$(arg image_rect_topic)" />
  </node>
  <!-- start AprilTag Algorithm -->
  <node ns="$(arg ns)" pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="apriltag_node" clear_params="true" output="screen">
    <rosparam command="load" file="$(find apriltag_ros)/config/settings.yaml"/>
    <rosparam command="load" file="$(arg tag_file)"/>
    <remap if="$(arg do_rectify)" from="image_rect" to="$(arg image_rect_topic)"/>
    <remap unless="$(arg do_rectify)" from="image_rect" to="$(arg image_raw_topic)"/>
    <param name="camera_frame" value="$(arg vehicle_name)/$(arg camera_name)/camera_frame"/>
    <param name="publish_tag_detections_image" value="true"/>
  </node>

  <!-- start tf publisher -->
  <include file="$(find hippocampus_common)/launch/tf_publisher.launch">
    <arg name="vehicle_name" value="$(arg vehicle_name)" />
    <arg name="vehicle_type" value="$(arg vehicle_type)" />
  </include>

  <!-- start EKF -->
  <include file="$(find mu_auv_localization)/launch/vision_ekf.launch">
    <arg name="camera_name" value="$(arg camera_name)"/>
    <arg name="ns" value="$(arg ns)" />
    <arg name="vehicle_name" value="$(arg vehicle_name)"/>

    <arg name="process_model" value="$(arg process_model)" />
    <arg name="measurement_model" value="$(arg measurement_model)" />
  </include>

  <!-- Convert orientation from quaternion to roll, pitch, yaw -->
  <node pkg="hippocampus_common" type="pose_to_rpy_node" name="pose_to_rpy_node" output="screen">
    <param name="pose_msg_type" value="PoseWithCovarianceStamped"/>
    <remap from="pose" to="mavros/vision_pose/pose_cov"/>
  </node>

</launch>
